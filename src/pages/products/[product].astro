---
import { products } from "../../data/products";
import Layout from "../../layouts/Layout.astro";

export const getStaticPaths = () => {
  return products.map(({ id }) => ({ params: { product: id } }));
};

const productId = Astro.params.product;
const product = products.find((product) => product.id === Number(productId));
---

<Layout>
  <main id="productDetails">
    <div class="min-h-screen py-12 sm:pt-20">
      <div
        class="flex flex-col justify-center items-center md:flex-row md:items-start space-y-8 md:space-y-0 md:space-x-4 lg:space-x-8 max-w-6xl w-11/12 mx-auto"
      >
        <div
          class="w-full md:w-1/2 max-w-md border border-palette-lighter bg-white rounded shadow-lg"
        >
          <div
            class="relative h-96 flex justify-center items-center overflow-hidden"
          >
            <img
              class="h-96 w-96 transform duration-500 ease-in-out hover:scale-110 absolute cursor-pointer"
              src={`/images/${product.images[0]}`}
            />
          </div>
          <div
            class="flex border-t h-36 space-x-1 w-full justify-center items-center overflow-auto"
            id="images"
          >
            {
              product.images.map((image) => (
                <img
                  src={`/images/${image}`}
                  class="w-36 h-32 flex-shrink-0 rounded-sm cursor-pointer"
                />
              ))
            }
          </div>
        </div>

        <div
          class="flex flex-col justify-between h-full w-full md:w-1/2 max-w-xs mx-auto space-y-4 min-h-128"
        >
          <a
            href="/"
            class="border border-blue-800 text-lg text-blue-900 font-semibold pt-2 pb-1 leading-relaxed flex justify-center items-center focus:outline-none w-full hover:bg-blue-100 rounded-sm"
            >Back to all Products</a
          >
          <div>
            <h1
              class="leading-relaxed font-bold text-3xl text-blue-900 py-2 sm:py-4"
            >
              {product.name}
            </h1>
            <p class="font-medium text-lg">{product.description}</p>
            <h5 class="text-2xl text-blue-800 font-medium py-4 px-1" id="price">
              ${product.sizes[0].price}
            </h5>
          </div>
          <div class="w-full">
            <div class="flex justify-start space-x-2 w-full">
              <div class="flex flex-col items-start space-y-1 flex-grow-0">
                <label class="text-gray-500 text-base">Qty.</label>
                <input
                  type="number"
                  id="quantity"
                  min="1"
                  value="1"
                  class="text-gray-900 border border-gray-300 w-16 p-2 text-center rounded-sm focus:border-slate-500"
                />
              </div>
              <div class="flex flex-col items-start space-y-1 flex-grow">
                <label class="text-gray-500 text-base">Size</label>
                <select
                  class="border border-gray-300 rounded-sm w-full p-2 text-gray-900"
                  id="sizes"
                >
                  {
                    product.sizes.map((size) => (
                      <option value={size.label}>{size.label}</option>
                    ))
                  }
                </select>
              </div>
            </div>
            <button
              id="addCart"
              class="p-3 bg-blue-800 text-white w-full mt-3 rounded-sm font-semibold text-xl flex justify-center items-center hover:bg-blue-900"
            >
              Add To Cart
            </button>
          </div>
        </div>
      </div>
    </div>
  </main>

  <script slot="scripts" define:vars={{ product }}>
    const cart = JSON.parse(localStorage.getItem("cart") ?? "[]");

    const $price = document.getElementById("price");
    const $sizes = document.getElementById("sizes");
    const $addCart = document.getElementById("addCart");
    const $quantity = document.getElementById("quantity");

    $sizes.addEventListener("change", () => {
      const currentSizeLabel = document.querySelector(
        "#sizes option:checked"
      ).value;

      const currentSize = product.sizes.find(
        (size) => size.label === currentSizeLabel
      );

      $price.innerText = `$${currentSize.price}`;
    });

    //onclick on addCart
    $addCart.addEventListener("click", () => {
      const currentSizeLabel = document.querySelector(
        "#sizes option:checked"
      ).value;

      const item = cart.findIndex(
        (item) =>
          item.productId === product.id && item.size === currentSizeLabel
      );

      if (item !== -1) {
        cart[item].quantity += Number($quantity.value);
      } else {
        const item = {
          productId: product.id,
          size: currentSizeLabel,
          quantity: Number($quantity.value),
        };
        cart.push(item);
      }

      localStorage.setItem("cart", JSON.stringify(cart));
      window.location.reload();
    });
  </script>
</Layout>
